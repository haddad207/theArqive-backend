# Generated by Django 3.0.5 on 2020-04-20 21:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('pins', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='upvotestory',
            name='upVoter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_upvoted_stories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pin',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selected_category', to='pins.categoryType'),
        ),
        migrations.AddField(
            model_name='pin',
            name='lastPersonEdit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pin',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userStories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pin',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='photo',
            name='uploader',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flagstory',
            name='flagger',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flagstory',
            name='pinId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flaggerstory', to='pins.pin'),
        ),
        migrations.AddField(
            model_name='flagcomment',
            name='comment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flaggingComment', to='pins.commentStory'),
        ),
        migrations.AddField(
            model_name='flagcomment',
            name='flagger',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flaggerComment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentstory',
            name='commenter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentstory',
            name='pin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commentstory', to='pins.pin'),
        ),
        migrations.AddConstraint(
            model_name='upvotestory',
            constraint=models.UniqueConstraint(fields=('pinId', 'upVoter'), name='upvoter-pin'),
        ),
        migrations.AddConstraint(
            model_name='flagstory',
            constraint=models.UniqueConstraint(fields=('pinId', 'flagger'), name='flagger-pin'),
        ),
    ]
